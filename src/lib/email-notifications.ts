import { logger } from './logger';

// Email notification types
export type AlertType =
  | 'cost_threshold_exceeded'
  | 'performance_degradation'
  | 'system_resource_high'
  | 'api_failure'
  | 'circuit_breaker_activated'
  | 'emergency_mode_activated'
  | 'maintenance_scheduled'
  | 'maintenance_completed'
  | 'rate_limit_exceeded'
  | 'security_incident';

export interface AlertData {
  type: AlertType;
  severity: 'low' | 'medium' | 'high' | 'critical';
  title: string;
  message: string;
  timestamp: Date;
  metadata?: Record<string, unknown>;
  affectedServices?: string[];
  recommendedActions?: string[];
}

export interface EmailRecipient {
  email: string;
  name?: string;
}

export interface EmailNotificationConfig {
  enabled: boolean;
  recipients: EmailRecipient[];
  frequency: 'immediate' | 'hourly' | 'daily';
  severityFilter: AlertType[];
}

// Email templates for different alert types
const EMAIL_TEMPLATES = {
  cost_threshold_exceeded: {
    subject: 'üö® Cost Alert: Daily/Monthly Threshold Exceeded',
    template: (data: AlertData) => `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: #fee2e2; border: 1px solid #fecaca; border-radius: 8px; padding: 20px; margin-bottom: 20px;">
          <h2 style="color: #dc2626; margin: 0 0 10px 0;">üö® Cost Alert</h2>
          <p style="margin: 0; color: #991b1b;"><strong>Daily/Monthly threshold exceeded</strong></p>
        </div>
        
        <div style="background: #f9fafb; border-radius: 8px; padding: 20px;">
          <h3 style="margin-top: 0; color: #374151;">Alert Details</h3>
          <p><strong>Time:</strong> ${data.timestamp.toLocaleString()}</p>
          <p><strong>Severity:</strong> <span style="color: #dc2626; text-transform: uppercase;">${data.severity}</span></p>
          <p><strong>Message:</strong> ${data.message}</p>
          
          ${
            data.metadata
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Additional Information</h4>
            <ul style="color: #6b7280;">
              ${Object.entries(data.metadata)
                .map(
                  ([key, value]) => `<li><strong>${key}:</strong> ${value}</li>`
                )
                .join('')}
            </ul>
          `
              : ''
          }
          
          ${
            data.recommendedActions
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Recommended Actions</h4>
            <ul style="color: #6b7280;">
              ${data.recommendedActions.map((action) => `<li>${action}</li>`).join('')}
            </ul>
          `
              : ''
          }
        </div>
        
        <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px; font-size: 14px; color: #6b7280;">
          <p style="margin: 0;">This alert was generated by the ForkInTheRoad Admin Alert System.</p>
          <p style="margin: 5px 0 0 0;">To manage your alert preferences, visit the admin panel.</p>
        </div>
      </div>
    `,
  },

  performance_degradation: {
    subject: '‚ö†Ô∏è Performance Alert: System Performance Degraded',
    template: (data: AlertData) => `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: #fef3c7; border: 1px solid #fde68a; border-radius: 8px; padding: 20px; margin-bottom: 20px;">
          <h2 style="color: #d97706; margin: 0 0 10px 0;">‚ö†Ô∏è Performance Alert</h2>
          <p style="margin: 0; color: #92400e;"><strong>System performance degraded</strong></p>
        </div>
        
        <div style="background: #f9fafb; border-radius: 8px; padding: 20px;">
          <h3 style="margin-top: 0; color: #374151;">Alert Details</h3>
          <p><strong>Time:</strong> ${data.timestamp.toLocaleString()}</p>
          <p><strong>Severity:</strong> <span style="color: #d97706; text-transform: uppercase;">${data.severity}</span></p>
          <p><strong>Message:</strong> ${data.message}</p>
          
          ${
            data.affectedServices
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Affected Services</h4>
            <ul style="color: #6b7280;">
              ${data.affectedServices.map((service) => `<li>${service}</li>`).join('')}
            </ul>
          `
              : ''
          }
          
          ${
            data.metadata
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Performance Metrics</h4>
            <ul style="color: #6b7280;">
              ${Object.entries(data.metadata)
                .map(
                  ([key, value]) => `<li><strong>${key}:</strong> ${value}</li>`
                )
                .join('')}
            </ul>
          `
              : ''
          }
          
          ${
            data.recommendedActions
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Recommended Actions</h4>
            <ul style="color: #6b7280;">
              ${data.recommendedActions.map((action) => `<li>${action}</li>`).join('')}
            </ul>
          `
              : ''
          }
        </div>
        
        <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px; font-size: 14px; color: #6b7280;">
          <p style="margin: 0;">This alert was generated by the ForkInTheRoad Admin Alert System.</p>
          <p style="margin: 5px 0 0 0;">To manage your alert preferences, visit the admin panel.</p>
        </div>
      </div>
    `,
  },

  system_resource_high: {
    subject: 'üî¥ System Alert: High Resource Usage',
    template: (data: AlertData) => `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: #fee2e2; border: 1px solid #fecaca; border-radius: 8px; padding: 20px; margin-bottom: 20px;">
          <h2 style="color: #dc2626; margin: 0 0 10px 0;">üî¥ System Alert</h2>
          <p style="margin: 0; color: #991b1b;"><strong>High resource usage detected</strong></p>
        </div>
        
        <div style="background: #f9fafb; border-radius: 8px; padding: 20px;">
          <h3 style="margin-top: 0; color: #374151;">Alert Details</h3>
          <p><strong>Time:</strong> ${data.timestamp.toLocaleString()}</p>
          <p><strong>Severity:</strong> <span style="color: #dc2626; text-transform: uppercase;">${data.severity}</span></p>
          <p><strong>Message:</strong> ${data.message}</p>
          
          ${
            data.metadata
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Resource Usage</h4>
            <ul style="color: #6b7280;">
              ${Object.entries(data.metadata)
                .map(
                  ([key, value]) => `<li><strong>${key}:</strong> ${value}</li>`
                )
                .join('')}
            </ul>
          `
              : ''
          }
          
          ${
            data.recommendedActions
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Recommended Actions</h4>
            <ul style="color: #6b7280;">
              ${data.recommendedActions.map((action) => `<li>${action}</li>`).join('')}
            </ul>
          `
              : ''
          }
        </div>
        
        <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px; font-size: 14px; color: #6b7280;">
          <p style="margin: 0;">This alert was generated by the ForkInTheRoad Admin Alert System.</p>
          <p style="margin: 5px 0 0 0;">To manage your alert preferences, visit the admin panel.</p>
        </div>
      </div>
    `,
  },

  emergency_mode_activated: {
    subject: 'üö® EMERGENCY: System in Emergency Mode',
    template: (data: AlertData) => `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: #dc2626; border: 1px solid #b91c1c; border-radius: 8px; padding: 20px; margin-bottom: 20px;">
          <h2 style="color: white; margin: 0 0 10px 0;">üö® EMERGENCY ALERT</h2>
          <p style="margin: 0; color: #fecaca;"><strong>System is in emergency mode</strong></p>
        </div>
        
        <div style="background: #f9fafb; border-radius: 8px; padding: 20px;">
          <h3 style="margin-top: 0; color: #374151;">Emergency Details</h3>
          <p><strong>Time:</strong> ${data.timestamp.toLocaleString()}</p>
          <p><strong>Severity:</strong> <span style="color: #dc2626; text-transform: uppercase;">${data.severity}</span></p>
          <p><strong>Message:</strong> ${data.message}</p>
          
          ${
            data.metadata
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Emergency Information</h4>
            <ul style="color: #6b7280;">
              ${Object.entries(data.metadata)
                .map(
                  ([key, value]) => `<li><strong>${key}:</strong> ${value}</li>`
                )
                .join('')}
            </ul>
          `
              : ''
          }
          
          ${
            data.recommendedActions
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Immediate Actions Required</h4>
            <ul style="color: #6b7280;">
              ${data.recommendedActions.map((action) => `<li>${action}</li>`).join('')}
            </ul>
          `
              : ''
          }
        </div>
        
        <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px; font-size: 14px; color: #6b7280;">
          <p style="margin: 0;"><strong>This is an emergency alert.</strong> Please take immediate action.</p>
          <p style="margin: 5px 0 0 0;">Contact: akpersad@gmail.com</p>
        </div>
      </div>
    `,
  },

  maintenance_scheduled: {
    subject: 'üîß Maintenance Scheduled: System Maintenance Window',
    template: (data: AlertData) => `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: #dbeafe; border: 1px solid #93c5fd; border-radius: 8px; padding: 20px; margin-bottom: 20px;">
          <h2 style="color: #1d4ed8; margin: 0 0 10px 0;">üîß Maintenance Scheduled</h2>
          <p style="margin: 0; color: #1e40af;"><strong>System maintenance window scheduled</strong></p>
        </div>
        
        <div style="background: #f9fafb; border-radius: 8px; padding: 20px;">
          <h3 style="margin-top: 0; color: #374151;">Maintenance Details</h3>
          <p><strong>Time:</strong> ${data.timestamp.toLocaleString()}</p>
          <p><strong>Severity:</strong> <span style="color: #1d4ed8; text-transform: uppercase;">${data.severity}</span></p>
          <p><strong>Message:</strong> ${data.message}</p>
          
          ${
            data.metadata
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Maintenance Information</h4>
            <ul style="color: #6b7280;">
              ${Object.entries(data.metadata)
                .map(
                  ([key, value]) => `<li><strong>${key}:</strong> ${value}</li>`
                )
                .join('')}
            </ul>
          `
              : ''
          }
        </div>
        
        <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px; font-size: 14px; color: #6b7280;">
          <p style="margin: 0;">This maintenance notification was sent by the ForkInTheRoad Admin Alert System.</p>
          <p style="margin: 5px 0 0 0;">To manage your notification preferences, visit the admin panel.</p>
        </div>
      </div>
    `,
  },

  api_failure: {
    subject: '‚ö†Ô∏è API Failure Alert: Service Unavailable',
    template: (data: AlertData) => `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: #fef3c7; border: 1px solid #fbbf24; border-radius: 8px; padding: 20px; margin-bottom: 20px;">
          <h2 style="color: #d97706; margin: 0 0 10px 0;">‚ö†Ô∏è API Failure Alert</h2>
          <p style="margin: 0; color: #92400e;"><strong>API service is currently unavailable</strong></p>
        </div>
        
        <div style="background: #f9fafb; border-radius: 8px; padding: 20px;">
          <h3 style="margin-top: 0; color: #374151;">Failure Details</h3>
          <p><strong>Time:</strong> ${data.timestamp.toLocaleString()}</p>
          <p><strong>Severity:</strong> <span style="color: #d97706; text-transform: uppercase;">${data.severity}</span></p>
          <p><strong>Message:</strong> ${data.message}</p>
          
          ${
            data.affectedServices
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Affected Services</h4>
            <ul style="color: #6b7280;">
              ${data.affectedServices.map((service) => `<li>${service}</li>`).join('')}
            </ul>
          `
              : ''
          }
          
          ${
            data.metadata
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Additional Information</h4>
            <ul style="color: #6b7280;">
              ${Object.entries(data.metadata)
                .map(
                  ([key, value]) => `<li><strong>${key}:</strong> ${value}</li>`
                )
                .join('')}
            </ul>
          `
              : ''
          }
          
          ${
            data.recommendedActions
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Recommended Actions</h4>
            <ul style="color: #6b7280;">
              ${data.recommendedActions.map((action) => `<li>${action}</li>`).join('')}
            </ul>
          `
              : ''
          }
        </div>
        
        <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px; font-size: 14px; color: #6b7280;">
          <p style="margin: 0;">This alert was generated by the ForkInTheRoad Admin Alert System.</p>
          <p style="margin: 5px 0 0 0;">To manage your alert preferences, visit the admin panel.</p>
        </div>
      </div>
    `,
  },

  circuit_breaker_activated: {
    subject: 'üî¥ Circuit Breaker Activated: API Protection Mode',
    template: (data: AlertData) => `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: #fecaca; border: 1px solid #f87171; border-radius: 8px; padding: 20px; margin-bottom: 20px;">
          <h2 style="color: #dc2626; margin: 0 0 10px 0;">üî¥ Circuit Breaker Activated</h2>
          <p style="margin: 0; color: #991b1b;"><strong>API protection mode is now active</strong></p>
        </div>
        
        <div style="background: #f9fafb; border-radius: 8px; padding: 20px;">
          <h3 style="margin-top: 0; color: #374151;">Circuit Breaker Details</h3>
          <p><strong>Time:</strong> ${data.timestamp.toLocaleString()}</p>
          <p><strong>Severity:</strong> <span style="color: #dc2626; text-transform: uppercase;">${data.severity}</span></p>
          <p><strong>Message:</strong> ${data.message}</p>
          
          ${
            data.affectedServices
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Affected Services</h4>
            <ul style="color: #6b7280;">
              ${data.affectedServices.map((service) => `<li>${service}</li>`).join('')}
            </ul>
          `
              : ''
          }
          
          ${
            data.metadata
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Circuit Breaker Information</h4>
            <ul style="color: #6b7280;">
              ${Object.entries(data.metadata)
                .map(
                  ([key, value]) => `<li><strong>${key}:</strong> ${value}</li>`
                )
                .join('')}
            </ul>
          `
              : ''
          }
          
          ${
            data.recommendedActions
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Recommended Actions</h4>
            <ul style="color: #6b7280;">
              ${data.recommendedActions.map((action) => `<li>${action}</li>`).join('')}
            </ul>
          `
              : ''
          }
        </div>
        
        <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px; font-size: 14px; color: #6b7280;">
          <p style="margin: 0;">This alert was generated by the ForkInTheRoad Admin Alert System.</p>
          <p style="margin: 5px 0 0 0;">To manage your alert preferences, visit the admin panel.</p>
        </div>
      </div>
    `,
  },

  maintenance_completed: {
    subject: '‚úÖ Maintenance Completed: System Back Online',
    template: (data: AlertData) => `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: #d1fae5; border: 1px solid #34d399; border-radius: 8px; padding: 20px; margin-bottom: 20px;">
          <h2 style="color: #059669; margin: 0 0 10px 0;">‚úÖ Maintenance Completed</h2>
          <p style="margin: 0; color: #047857;"><strong>System maintenance has been completed successfully</strong></p>
        </div>
        
        <div style="background: #f9fafb; border-radius: 8px; padding: 20px;">
          <h3 style="margin-top: 0; color: #374151;">Maintenance Summary</h3>
          <p><strong>Time:</strong> ${data.timestamp.toLocaleString()}</p>
          <p><strong>Severity:</strong> <span style="color: #059669; text-transform: uppercase;">${data.severity}</span></p>
          <p><strong>Message:</strong> ${data.message}</p>
          
          ${
            data.metadata
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Maintenance Details</h4>
            <ul style="color: #6b7280;">
              ${Object.entries(data.metadata)
                .map(
                  ([key, value]) => `<li><strong>${key}:</strong> ${value}</li>`
                )
                .join('')}
            </ul>
          `
              : ''
          }
        </div>
        
        <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px; font-size: 14px; color: #6b7280;">
          <p style="margin: 0;">This notification was sent by the ForkInTheRoad Admin Alert System.</p>
          <p style="margin: 5px 0 0 0;">To manage your notification preferences, visit the admin panel.</p>
        </div>
      </div>
    `,
  },

  rate_limit_exceeded: {
    subject: 'üö´ Rate Limit Exceeded: API Throttling Active',
    template: (data: AlertData) => `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: #fef3c7; border: 1px solid #fbbf24; border-radius: 8px; padding: 20px; margin-bottom: 20px;">
          <h2 style="color: #d97706; margin: 0 0 10px 0;">üö´ Rate Limit Exceeded</h2>
          <p style="margin: 0; color: #92400e;"><strong>API rate limit has been exceeded</strong></p>
        </div>
        
        <div style="background: #f9fafb; border-radius: 8px; padding: 20px;">
          <h3 style="margin-top: 0; color: #374151;">Rate Limit Details</h3>
          <p><strong>Time:</strong> ${data.timestamp.toLocaleString()}</p>
          <p><strong>Severity:</strong> <span style="color: #d97706; text-transform: uppercase;">${data.severity}</span></p>
          <p><strong>Message:</strong> ${data.message}</p>
          
          ${
            data.metadata
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Rate Limit Information</h4>
            <ul style="color: #6b7280;">
              ${Object.entries(data.metadata)
                .map(
                  ([key, value]) => `<li><strong>${key}:</strong> ${value}</li>`
                )
                .join('')}
            </ul>
          `
              : ''
          }
          
          ${
            data.recommendedActions
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Recommended Actions</h4>
            <ul style="color: #6b7280;">
              ${data.recommendedActions.map((action) => `<li>${action}</li>`).join('')}
            </ul>
          `
              : ''
          }
        </div>
        
        <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px; font-size: 14px; color: #6b7280;">
          <p style="margin: 0;">This alert was generated by the ForkInTheRoad Admin Alert System.</p>
          <p style="margin: 5px 0 0 0;">To manage your alert preferences, visit the admin panel.</p>
        </div>
      </div>
    `,
  },

  security_incident: {
    subject: 'üîí Security Incident Alert: Immediate Attention Required',
    template: (data: AlertData) => `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: #fecaca; border: 1px solid #f87171; border-radius: 8px; padding: 20px; margin-bottom: 20px;">
          <h2 style="color: #dc2626; margin: 0 0 10px 0;">üîí Security Incident Alert</h2>
          <p style="margin: 0; color: #991b1b;"><strong>Security incident detected - immediate attention required</strong></p>
        </div>
        
        <div style="background: #f9fafb; border-radius: 8px; padding: 20px;">
          <h3 style="margin-top: 0; color: #374151;">Security Incident Details</h3>
          <p><strong>Time:</strong> ${data.timestamp.toLocaleString()}</p>
          <p><strong>Severity:</strong> <span style="color: #dc2626; text-transform: uppercase;">${data.severity}</span></p>
          <p><strong>Message:</strong> ${data.message}</p>
          
          ${
            data.metadata
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Incident Information</h4>
            <ul style="color: #6b7280;">
              ${Object.entries(data.metadata)
                .map(
                  ([key, value]) => `<li><strong>${key}:</strong> ${value}</li>`
                )
                .join('')}
            </ul>
          `
              : ''
          }
          
          ${
            data.recommendedActions
              ? `
            <h4 style="color: #374151; margin-top: 20px;">Immediate Actions Required</h4>
            <ul style="color: #6b7280;">
              ${data.recommendedActions.map((action) => `<li>${action}</li>`).join('')}
            </ul>
          `
              : ''
          }
        </div>
        
        <div style="margin-top: 20px; padding: 15px; background: #f3f4f6; border-radius: 8px; font-size: 14px; color: #6b7280;">
          <p style="margin: 0;"><strong>This is a security alert.</strong> Please take immediate action.</p>
          <p style="margin: 5px 0 0 0;">Contact: akpersad@gmail.com</p>
        </div>
      </div>
    `,
  },
};

// Email notification service class
export class EmailNotificationService {
  private resendApiKey: string;
  private fromEmail: string;

  constructor() {
    this.resendApiKey = process.env.RESEND_API_KEY || '';
    this.fromEmail = process.env.FROM_EMAIL || 'onboarding@resend.dev';

    if (!this.resendApiKey) {
      logger.warn('EmailNotificationService: RESEND_API_KEY not configured');
    }
  }

  /**
   * Send an email notification for an alert
   */
  async sendAlertNotification(
    alertData: AlertData,
    recipients: EmailRecipient[]
  ): Promise<boolean> {
    try {
      if (!this.resendApiKey) {
        logger.error(
          'EmailNotificationService: Cannot send email - RESEND_API_KEY not configured'
        );
        return false;
      }

      if (!recipients.length) {
        logger.warn(
          'EmailNotificationService: No recipients provided for alert',
          { alertType: alertData.type }
        );
        return false;
      }

      const template = EMAIL_TEMPLATES[alertData.type];
      if (!template) {
        logger.error(
          'EmailNotificationService: No template found for alert type',
          { alertType: alertData.type }
        );
        return false;
      }

      const emailData = {
        from: this.fromEmail,
        to: recipients.map((r) => r.email),
        subject: template.subject,
        html: template.template(alertData),
      };

      const response = await fetch('https://api.resend.com/emails', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${this.resendApiKey}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(emailData),
      });

      if (!response.ok) {
        const errorData = await response.json();
        logger.error('EmailNotificationService: Failed to send email', {
          status: response.status,
          error: errorData,
          alertType: alertData.type,
        });
        return false;
      }

      const result = await response.json();
      logger.info('EmailNotificationService: Email sent successfully', {
        alertType: alertData.type,
        recipients: recipients.length,
        emailId: result.id,
      });

      // Track API usage for cost monitoring (one tracking per email)
      try {
        const { trackAPIUsage } = await import('./api-usage-tracker');
        for (let i = 0; i < recipients.length; i++) {
          await trackAPIUsage('resend_email_sent', false, {
            type: alertData.type,
            recipients: recipients.length,
          });
        }
      } catch (error) {
        logger.error('Failed to track email API usage:', error);
      }

      return true;
    } catch (error) {
      logger.error(
        'EmailNotificationService: Error sending email notification',
        {
          error,
          alertType: alertData.type,
        }
      );
      return false;
    }
  }

  /**
   * Send a test email to verify configuration
   */
  async sendTestEmail(recipient: string): Promise<boolean> {
    try {
      if (!this.resendApiKey) {
        logger.error(
          'EmailNotificationService: Cannot send test email - RESEND_API_KEY not configured'
        );
        return false;
      }

      const testAlertData: AlertData = {
        type: 'cost_threshold_exceeded',
        severity: 'low',
        title: 'Test Alert',
        message:
          'This is a test email to verify the email notification system is working correctly.',
        timestamp: new Date(),
        metadata: {
          'Test Mode': 'Yes',
          System: 'ForkInTheRoad Admin Panel',
        },
        recommendedActions: [
          'Verify email delivery',
          'Check spam folder if not received',
          'Contact admin if issues persist',
        ],
      };

      return await this.sendAlertNotification(testAlertData, [
        { email: recipient },
      ]);
    } catch (error) {
      logger.error('EmailNotificationService: Error sending test email', {
        error,
      });
      return false;
    }
  }

  /**
   * Validate email configuration
   */
  async validateConfiguration(): Promise<{ valid: boolean; error?: string }> {
    try {
      if (!this.resendApiKey) {
        return { valid: false, error: 'RESEND_API_KEY not configured' };
      }

      if (!this.fromEmail) {
        return { valid: false, error: 'FROM_EMAIL not configured' };
      }

      // Test API key by making a simple request to the emails endpoint
      // This works even with restricted API keys that can only send emails
      const response = await fetch('https://api.resend.com/emails', {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${this.resendApiKey}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          from: this.fromEmail,
          to: ['test@example.com'],
          subject: 'API Key Validation Test',
          html: '<p>This is a test to validate the API key.</p>',
        }),
      });

      // For restricted API keys, we expect a 400 error (bad request) but not 401 (unauthorized)
      if (response.status === 401) {
        return { valid: false, error: 'Invalid RESEND_API_KEY' };
      }

      // Any other response (including 400 for invalid email) means the API key is valid
      if (response.status >= 400 && response.status < 500) {
        return { valid: true };
      }

      return { valid: true };
    } catch {
      return { valid: false, error: 'Failed to validate email configuration' };
    }
  }
}

// Singleton instance
export const emailNotificationService = new EmailNotificationService();
